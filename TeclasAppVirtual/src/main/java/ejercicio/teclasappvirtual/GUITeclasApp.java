package ejercicio.teclasappvirtual;

import java.awt.Color;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;

public class GUITeclasApp extends javax.swing.JFrame{

    /**
     * Creates new form NewJFrame
     */
    private final cargarPangrama cargarPangrama;
    
    private int pulsacionesCorrectas = 0;
    private int pulsacionesIncorrectas = 0;
    private final ArrayList<Character> teclasDificiles = new ArrayList<>();


    public GUITeclasApp() {
        initComponents();

        cargarPangrama = new cargarPangrama();
                   
        jPanel2.requestFocus();
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTextArea();
        btnSubirPangrama = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPangrama = new javax.swing.JTextArea();
        btnRevisar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        esc = new javax.swing.JButton();
        tab = new javax.swing.JButton();
        q = new javax.swing.JButton();
        w = new javax.swing.JButton();
        e = new javax.swing.JButton();
        r = new javax.swing.JButton();
        t = new javax.swing.JButton();
        y = new javax.swing.JButton();
        u = new javax.swing.JButton();
        i = new javax.swing.JButton();
        o = new javax.swing.JButton();
        p = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        lock = new javax.swing.JButton();
        a = new javax.swing.JButton();
        s = new javax.swing.JButton();
        d = new javax.swing.JButton();
        f = new javax.swing.JButton();
        g = new javax.swing.JButton();
        h = new javax.swing.JButton();
        j = new javax.swing.JButton();
        k = new javax.swing.JButton();
        l = new javax.swing.JButton();
        sm = new javax.swing.JButton();
        uper = new javax.swing.JButton();
        enter1 = new javax.swing.JButton();
        z = new javax.swing.JButton();
        x = new javax.swing.JButton();
        c = new javax.swing.JButton();
        v = new javax.swing.JButton();
        b = new javax.swing.JButton();
        n = new javax.swing.JButton();
        m = new javax.swing.JButton();
        que = new javax.swing.JButton();
        spacebar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tb1.setColumns(20);
        tb1.setRows(5);
        jScrollPane1.setViewportView(tb1);

        btnSubirPangrama.setBackground(new java.awt.Color(204, 0, 204));
        btnSubirPangrama.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnSubirPangrama.setForeground(new java.awt.Color(0, 0, 0));
        btnSubirPangrama.setText("Subir Archivo");
        btnSubirPangrama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirPangramaActionPerformed(evt);
            }
        });

        jTextPangrama.setEditable(false);
        jTextPangrama.setColumns(20);
        jTextPangrama.setRows(5);
        jTextPangrama.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jTextPangramaComponentHidden(evt);
            }
        });
        jScrollPane3.setViewportView(jTextPangrama);

        btnRevisar.setBackground(new java.awt.Color(0, 102, 255));
        btnRevisar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnRevisar.setForeground(new java.awt.Color(0, 0, 0));
        btnRevisar.setText("Revisar");
        btnRevisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevisarActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("Limpiar √Årea");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 768, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSubirPangrama)
                            .addComponent(btnRevisar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 890, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSubirPangrama)
                        .addGap(9, 9, 9)
                        .addComponent(btnRevisar)
                        .addGap(9, 9, 9)
                        .addComponent(jButton1)))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 958, -1));

        jPanel2.setBackground(new java.awt.Color(255, 204, 0));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel2KeyPressed(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        esc.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        esc.setText("ESC");
        esc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                escActionPerformed(evt);
            }
        });
        jPanel2.add(esc, new org.netbeans.lib.awtextra.AbsoluteConstraints(9, 9, -1, 34));

        tab.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        tab.setText("Tab");
        tab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tabActionPerformed(evt);
            }
        });
        jPanel2.add(tab, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 61, -1, 34));

        q.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        q.setText("Q");
        q.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qKeyReleased(evt);
            }
        });
        jPanel2.add(q, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, -1, 34));

        w.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        w.setText("W");
        w.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                wKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                wKeyReleased(evt);
            }
        });
        jPanel2.add(w, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 43, 30));

        e.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        e.setText("E");
        e.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                eKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                eKeyReleased(evt);
            }
        });
        jPanel2.add(e, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, -1, 34));

        r.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        r.setText("R");
        r.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rKeyReleased(evt);
            }
        });
        jPanel2.add(r, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, -1, 34));

        t.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        t.setText("T");
        t.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tKeyReleased(evt);
            }
        });
        jPanel2.add(t, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, -1, 34));

        y.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        y.setText("Y");
        y.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                yKeyReleased(evt);
            }
        });
        jPanel2.add(y, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, -1, 34));

        u.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        u.setText("U");
        u.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                uKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                uKeyReleased(evt);
            }
        });
        jPanel2.add(u, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, -1, 34));

        i.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        i.setText("I");
        i.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                iKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                iKeyReleased(evt);
            }
        });
        jPanel2.add(i, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 60, -1, 34));

        o.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        o.setText("O");
        o.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                oKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                oKeyReleased(evt);
            }
        });
        jPanel2.add(o, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, -1, 34));

        p.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        p.setText("P");
        p.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pKeyReleased(evt);
            }
        });
        jPanel2.add(p, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, -1, 34));

        jButton41.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        jButton41.setText("<---");
        jPanel2.add(jButton41, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 179, 34));

        lock.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        lock.setText("Bloq May√∫s");
        lock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lockMouseClicked(evt);
            }
        });
        lock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockActionPerformed(evt);
            }
        });
        jPanel2.add(lock, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 135, 114, 34));

        a.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        a.setText("A");
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });
        a.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                aKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                aKeyReleased(evt);
            }
        });
        jPanel2.add(a, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 111, -1, 34));

        s.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        s.setText("S");
        s.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sKeyReleased(evt);
            }
        });
        jPanel2.add(s, new org.netbeans.lib.awtextra.AbsoluteConstraints(171, 111, -1, 34));

        d.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        d.setText("D");
        d.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dKeyReleased(evt);
            }
        });
        jPanel2.add(d, new org.netbeans.lib.awtextra.AbsoluteConstraints(207, 111, -1, 34));

        f.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        f.setText("F");
        f.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fKeyReleased(evt);
            }
        });
        jPanel2.add(f, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 111, -1, 34));

        g.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        g.setText("G");
        g.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                gKeyReleased(evt);
            }
        });
        jPanel2.add(g, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 39, 34));

        h.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        h.setText("H");
        h.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                hKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hKeyReleased(evt);
            }
        });
        jPanel2.add(h, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, -1, 34));

        j.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        j.setText("J");
        j.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jKeyReleased(evt);
            }
        });
        jPanel2.add(j, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 110, -1, 34));

        k.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        k.setText("K");
        k.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                kKeyReleased(evt);
            }
        });
        jPanel2.add(k, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 110, -1, 34));

        l.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        l.setText("L");
        l.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lKeyReleased(evt);
            }
        });
        jPanel2.add(l, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, 41, 34));

        sm.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        sm.setText(";");
        sm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smActionPerformed(evt);
            }
        });
        jPanel2.add(sm, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 110, 41, 34));

        uper.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        uper.setText("'");
        uper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uperActionPerformed(evt);
            }
        });
        jPanel2.add(uper, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 110, 34, 34));

        enter1.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        enter1.setText("Enter");
        jPanel2.add(enter1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 111, 114, 34));

        z.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        z.setText("Z");
        z.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                zKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                zKeyReleased(evt);
            }
        });
        jPanel2.add(z, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 159, -1, 34));

        x.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        x.setText("X");
        x.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                xKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                xKeyReleased(evt);
            }
        });
        jPanel2.add(x, new org.netbeans.lib.awtextra.AbsoluteConstraints(227, 159, 38, 34));

        c.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        c.setText("C");
        c.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cKeyReleased(evt);
            }
        });
        jPanel2.add(c, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 159, -1, 34));

        v.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        v.setText("V");
        v.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                vKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vKeyReleased(evt);
            }
        });
        jPanel2.add(v, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 159, -1, 34));

        b.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        b.setText("B");
        b.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                bKeyReleased(evt);
            }
        });
        jPanel2.add(b, new org.netbeans.lib.awtextra.AbsoluteConstraints(359, 159, -1, 34));

        n.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        n.setText("N");
        n.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nKeyReleased(evt);
            }
        });
        jPanel2.add(n, new org.netbeans.lib.awtextra.AbsoluteConstraints(401, 159, -1, 34));

        m.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        m.setText("M");
        m.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mKeyReleased(evt);
            }
        });
        jPanel2.add(m, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, -1, 34));

        que.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        que.setText("?");
        que.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queActionPerformed(evt);
            }
        });
        jPanel2.add(que, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, 38, 34));

        spacebar.setFont(new java.awt.Font("Tw Cen MT Condensed", 1, 18)); // NOI18N
        spacebar.setText("Espacio");
        spacebar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spacebarActionPerformed(evt);
            }
        });
        spacebar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                spacebarKeyPressed(evt);
            }
        });
        jPanel2.add(spacebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 199, 326, 34));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 253, 820, 230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spacebarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spacebarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spacebarActionPerformed

    private void tabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tabActionPerformed
        tb1.setText(tb1.getText() + "         ");        // for tab in textbox
    }//GEN-LAST:event_tabActionPerformed

    private void smActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smActionPerformed
        tb1.setText(tb1.getText() + sm.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_smActionPerformed

    private void uperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uperActionPerformed
        tb1.setText(tb1.getText() + uper.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_uperActionPerformed

    private void queActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queActionPerformed
        tb1.setText(tb1.getText() + que.getText());        // TODO add your handling code here:
    }//GEN-LAST:event_queActionPerformed

    private void lockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_lockActionPerformed

    private void lockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lockMouseClicked
        if (evt.getClickCount() == 2) {
            a.setText("a");
            b.setText("b");
            c.setText("c");
            d.setText("c");
            e.setText("e");
            f.setText("f");
            g.setText("g");
            h.setText("h");
            i.setText("i");
            j.setText("j");
            k.setText("k");
            l.setText("l");
            m.setText("m");
            n.setText("n");
            o.setText("o");
            p.setText("p");
            q.setText("q");
            r.setText("r");
            s.setText("s");
            t.setText("t");
            u.setText("u");
            v.setText("v");
            w.setText("w");
            x.setText("x");
            y.setText("y");
            z.setText("z");

        }
        if (evt.getClickCount() == 1) {
            a.setText("A");
            b.setText("B");
            c.setText("C");
            d.setText("D");
            e.setText("E");
            f.setText("F");
            g.setText("G");
            h.setText("H");
            i.setText("I");
            j.setText("J");
            k.setText("K");
            l.setText("L");
            m.setText("M");
            n.setText("N");
            o.setText("O");
            p.setText("P");
            q.setText("Q");
            r.setText("R");
            s.setText("S");
            t.setText("T");
            u.setText("U");
            v.setText("V");
            w.setText("W");
            x.setText("X");
            y.setText("Y");
            z.setText("Z");
        }
// TODO add your handling code here:
    }//GEN-LAST:event_lockMouseClicked

    private void escActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_escActionPerformed
        tb1.setText("");  // limpiar textbox
    }//GEN-LAST:event_escActionPerformed

    private void eKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eKeyPressed

        if (Character.toLowerCase(evt.getKeyChar()) == 'e') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('e');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_eKeyPressed

    private void eKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eKeyReleased
        e.setBackground(UIManager.getColor("Button.background"));
    }//GEN-LAST:event_eKeyReleased


    private void aKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aKeyPressed

        if (Character.toLowerCase(evt.getKeyChar()) == 'a') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('a');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }

    }//GEN-LAST:event_aKeyPressed

    private void aKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aKeyReleased
        a.setBackground(UIManager.getColor("Button.background"));


    }//GEN-LAST:event_aKeyReleased

    private void btnSubirPangramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirPangramaActionPerformed

        seleccionarArchivoPangramas();
    }//GEN-LAST:event_btnSubirPangramaActionPerformed

    private void jTextPangramaComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTextPangramaComponentHidden

    }//GEN-LAST:event_jTextPangramaComponentHidden

    private void zKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zKeyReleased

        z.setBackground(UIManager.getColor("Button.background"));


    }//GEN-LAST:event_zKeyReleased

    private void sKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sKeyReleased
        s.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_sKeyReleased

    private void tKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tKeyReleased
        t.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_tKeyReleased

    private void qKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qKeyReleased
        q.setBackground(UIManager.getColor("Button.background"));
    }//GEN-LAST:event_qKeyReleased

    private void dKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dKeyReleased
        d.setBackground(UIManager.getColor("Button.background"));
    }//GEN-LAST:event_dKeyReleased

    private void qKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qKeyPressed

        if (Character.toLowerCase(evt.getKeyChar()) == 'q') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('q');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_qKeyPressed

    private void wKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wKeyPressed

        // Verificar si la tecla presionada es 'W' o 'w'
        if (evt.getKeyChar() == 'W' || evt.getKeyChar() == 'w') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('w');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }

        }


    }//GEN-LAST:event_wKeyPressed

    private void rKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rKeyPressed

        if (Character.toLowerCase(evt.getKeyChar()) == 'r') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('r');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_rKeyPressed

    private void tKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tKeyPressed

        if (Character.toLowerCase(evt.getKeyChar()) == 't') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('t');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_tKeyPressed

    private void sKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sKeyPressed

        if (Character.toLowerCase(evt.getKeyChar()) == 's') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('s');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_sKeyPressed

    private void xKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_xKeyReleased
        x.setBackground(UIManager.getColor("Button.background"));
    }//GEN-LAST:event_xKeyReleased

    private void yKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yKeyPressed

        if (Character.toLowerCase(evt.getKeyChar()) == 'y') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('y');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_yKeyPressed

    private void uKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'u') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('u');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_uKeyPressed

    private void iKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iKeyPressed
        // TODO add your handling code here:
        if (Character.toLowerCase(evt.getKeyChar()) == 'i') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('i');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_iKeyPressed

    private void oKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'o') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('o');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_oKeyPressed

    private void pKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pKeyPressed

        if (Character.toLowerCase(evt.getKeyChar()) == 'p') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('p');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_pKeyPressed

    private void dKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'd') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('d');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_dKeyPressed

    private void fKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'f') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('f');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_fKeyPressed

    private void gKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gKeyPressed
        // TODO add your handling code here:
        if (Character.toLowerCase(evt.getKeyChar()) == 'g') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('g');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_gKeyPressed

    private void hKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hKeyPressed
        if (Character.toLowerCase(evt.getKeyChar()) == 'h') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('h');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }

    }//GEN-LAST:event_hKeyPressed

    private void jKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'j') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('j');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_jKeyPressed

    private void kKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'k') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('k');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_kKeyPressed

    private void lKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lKeyPressed
        // TODO add your handling code here:
        if (Character.toLowerCase(evt.getKeyChar()) == 'l') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('l');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_lKeyPressed

    private void zKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'z') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('z');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_zKeyPressed

    private void xKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_xKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'x') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('x');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_xKeyPressed

    private void cKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cKeyPressed
        // TODO add your handling code here:
        if (Character.toLowerCase(evt.getKeyChar()) == 'c') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('c');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_cKeyPressed

    private void vKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'v') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('v');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_vKeyPressed

    private void bKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bKeyPressed
        // TODO add your handling code here:
        if (Character.toLowerCase(evt.getKeyChar()) == 'b') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('b');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_bKeyPressed

    private void nKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'n') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('n');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }


    }//GEN-LAST:event_nKeyPressed

    private void mKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mKeyPressed
        // TODO add your handling code here:

        if (Character.toLowerCase(evt.getKeyChar()) == 'm') {
            // Obtener el bot√≥n correspondiente
            JButton botonPresionado = obtenerBotonCorrespondiente('m');
            if (botonPresionado != null) {
                // Cambiar el color del bot√≥n a azul
                cambiarColor(botonPresionado, Color.BLUE);
            }

            // Verificar si tb1 est√° inicializado
            if (tb1 != null) {
                // Actualizar el contenido de tb1 con el texto del bot√≥n
                tb1.setText(tb1.getText() + "" + botonPresionado.getText());
            }
        }

    }//GEN-LAST:event_mKeyPressed

    private void wKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wKeyReleased
        // TODO add your handling code here:
        w.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_wKeyReleased

    private void rKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rKeyReleased
        r.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_rKeyReleased

    private void yKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yKeyReleased
        // TODO add your handling code here:
        y.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_yKeyReleased

    private void uKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uKeyReleased
        // TODO add your handling code here:

        u.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_uKeyReleased

    private void iKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iKeyReleased
        // TODO add your handling code here:

        i.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_iKeyReleased

    private void pKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pKeyReleased
        // TODO add your handling code here:
        p.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_pKeyReleased

    private void fKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fKeyReleased
        // TODO add your handling code here:
        f.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_fKeyReleased

    private void gKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gKeyReleased
        // TODO add your handling code here:
        g.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_gKeyReleased

    private void hKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hKeyReleased
        h.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_hKeyReleased

    private void jKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jKeyReleased
        j.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_jKeyReleased

    private void kKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kKeyReleased
        // TODO add your handling code here:
        k.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_kKeyReleased

    private void lKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lKeyReleased
        // TODO add your handling code here:
        l.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_lKeyReleased

    private void cKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cKeyReleased
        // TODO add your handling code here:

        c.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_cKeyReleased

    private void vKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vKeyReleased
        // TODO add your handling code here:
        v.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_vKeyReleased

    private void bKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bKeyReleased
        // TODO add your handling code here:
        b.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_bKeyReleased

    private void nKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nKeyReleased
        // TODO add your handling code here:
        n.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_nKeyReleased

    private void mKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mKeyReleased
        // TODO add your handling code here:
        m.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_mKeyReleased

    private void oKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oKeyReleased

                  o.setBackground(UIManager.getColor("Button.background"));

    }//GEN-LAST:event_oKeyReleased

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed

    private void btnRevisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevisarActionPerformed
                                         
    if (pangramaSeleccionado == null || pangramaSeleccionado.isEmpty()) {
        // No hay pangrama cargado, mostrar un mensaje o realizar alguna acci√≥n
        JOptionPane.showMessageDialog(this, "No hay pangrama cargado.", "Revisi√≥n de Pulsaciones", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Llamar al m√©todo de revisi√≥n
    revisionPangrama();

   

        
        
    }//GEN-LAST:event_btnRevisarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:        
        tb1.setText("");  // limpiar textbox

    }//GEN-LAST:event_jButton1ActionPerformed

    private void spacebarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spacebarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_spacebarKeyPressed

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aActionPerformed

    private void jPanel2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel2KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUITeclasApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUITeclasApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUITeclasApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUITeclasApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUITeclasApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton a;
    private javax.swing.JButton b;
    private javax.swing.JButton btnRevisar;
    private javax.swing.JButton btnSubirPangrama;
    private javax.swing.JButton c;
    private javax.swing.JButton d;
    private javax.swing.JButton e;
    private javax.swing.JButton enter1;
    private javax.swing.JButton esc;
    private javax.swing.JButton f;
    private javax.swing.JButton g;
    private javax.swing.JButton h;
    private javax.swing.JButton i;
    private javax.swing.JButton j;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton41;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextPangrama;
    private javax.swing.JButton k;
    private javax.swing.JButton l;
    private javax.swing.JButton lock;
    private javax.swing.JButton m;
    private javax.swing.JButton n;
    private javax.swing.JButton o;
    private javax.swing.JButton p;
    private javax.swing.JButton q;
    private javax.swing.JButton que;
    private javax.swing.JButton r;
    private javax.swing.JButton s;
    private javax.swing.JButton sm;
    private javax.swing.JButton spacebar;
    private javax.swing.JButton t;
    private javax.swing.JButton tab;
    private javax.swing.JTextArea tb1;
    private javax.swing.JButton u;
    private javax.swing.JButton uper;
    private javax.swing.JButton v;
    private javax.swing.JButton w;
    private javax.swing.JButton x;
    private javax.swing.JButton y;
    private javax.swing.JButton z;
    // End of variables declaration//GEN-END:variables

    private void cambiarColor(JButton button, Color color) {
        button.setBackground(color);
    }

    private String pangramaSeleccionado;

    private void seleccionarArchivoPangramas() {
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            cargarPangrama.cargarPangramasDesdeArchivo(selectedFile);
            pangramaSeleccionado = mostrarPangramaAleatorio();
        }

    }

    private String mostrarPangramaAleatorio() {

        try {
            String pangramaAleatorio = cargarPangrama.obtenerPangramaAleatorio();

            System.out.println("Pangrama aleatorio: " + pangramaAleatorio);

            SwingUtilities.invokeLater(() -> {
                jTextPangrama.setText(pangramaAleatorio);
            });
            return pangramaAleatorio;

        } catch (Exception e) {
            e.printStackTrace();
            return "";

        }

    }

    private JButton obtenerBotonCorrespondiente(char tecla) {
        
        
        // Obtener el nombre del bot√≥n basado en la tecla
        String nombreBoton = String.valueOf(tecla).toLowerCase(); // Convierte la tecla a min√∫scula
        // Obtener el bot√≥n utilizando reflexi√≥n
        try {
            // "this" se refiere a la instancia actual de la clase que contiene los botones
            java.lang.reflect.Field field = this.getClass().getDeclaredField(nombreBoton);
            JButton boton = (JButton) field.get(this);

            // Dar el foco al bot√≥n si se encuentra
            if (boton != null) {
                boton.requestFocusInWindow();
            }

            return boton;
        } catch (NoSuchFieldException | IllegalAccessException ex) {
            ex.printStackTrace(); // Manejo b√°sico de excepciones, puedes personalizar seg√∫n tus necesidades
            return null;
        }

    }

private void revisionPangrama() {
    // Verificar si hay un pangrama cargado
    if (pangramaSeleccionado == null || pangramaSeleccionado.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No hay pangrama cargado.", "Revisi√≥n de Pulsaciones", JOptionPane.WARNING_MESSAGE);
        return;
    }

    // Realizar revisi√≥n de pulsaciones
    realizarRevisionPulsaciones(tb1.getText(), pangramaSeleccionado);

    // Generar e mostrar informe en cuadro de di√°logo
    mostrarInformeRevision();
}

    private void realizarRevisionPulsaciones(String textoIngresado, String pangrama) {
        int longitudPangrama = pangrama.length();

        for (int i = 0; i < Math.min(textoIngresado.length(), longitudPangrama); i++) {
            char teclaIngresada = textoIngresado.charAt(i);
            char teclaPangrama = pangrama.charAt(i);

            if (teclaIngresada == teclaPangrama) {
                pulsacionesCorrectas++;
            } else {
                pulsacionesIncorrectas++;
                teclasDificiles.add(teclaIngresada);
            }
        }

        // Si el usuario ingres√≥ m√°s caracteres, contabilizarlos como incorrectos
        for (int i = longitudPangrama; i < textoIngresado.length(); i++) {
            pulsacionesIncorrectas++;
            teclasDificiles.add(textoIngresado.charAt(i));
        }
    }

    private void mostrarInformeRevision() {
        // Generar informe para el cuadro de di√°logo
        StringBuilder informe = new StringBuilder();
        informe.append("Estad√≠sticas de Revisi√≥n:\n");
        informe.append("Pulsaciones correctas: ").append(pulsacionesCorrectas).append("\n");
        informe.append("Pulsaciones incorrectas: ").append(pulsacionesIncorrectas).append("\n");
        informe.append("Teclas dif√≠ciles: ").append(teclasDificiles).append("\n");

        // Mostrar cuadro de di√°logo con el informe
        JOptionPane.showMessageDialog(this, informe.toString(), "Informe de Revisi√≥n", JOptionPane.INFORMATION_MESSAGE);

        // Restablecer estad√≠sticas para la pr√≥xima revisi√≥n
        reiniciarEstadisticas();
    }

    private void reiniciarEstadisticas() {
        pulsacionesCorrectas = 0;
        pulsacionesIncorrectas = 0;
        teclasDificiles.clear();
    }
    

}
    
    
    
